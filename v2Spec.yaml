openapi: 3.0.3
info:
  title: Vaults.fyi API
  version: V2
  description: >-
    The Vaults.fyi V2 API offers a streamlined, better structured, and more performant interface 
    for accessing DeFi vault data. This simplified version delivers optimized performance while
    maintaining comprehensive coverage across networks. Basic API key use is limited to 10 requests per minute.
tags:
  - name: General
    description: Core informational endpoints providing essential reference data such as networks, assets, and vaults listings for orientation and exploration.
  - name: Detailed Vaults
    description: Comprehensive vault data endpoints delivering in-depth analytics including APY metrics, TVL statistics, rewards breakdowns, and risk scores.
  - name: Benchmarks
    description: Vaults.fyi curated benchmark endpoints providing aggregated yield performance data for USD and ETH denominated assets across selected networks.
  - name: Historical (PRO)
    description: Premium endpoints returning time-series historical data for vault metrics, enabling trend analysis and performance tracking over customizable periods.
  - name: Transactional (PRO)
    description: Advanced transactional interface endpoints exposing user position data, executable actions, and transaction-ready payloads for direct integration with DeFi protocols.
  - name: Portfolio (PRO)
    description: Advanced endpoints providing detailed information about user balances, active positions, historical interactions, and tailored investment opportunities.
paths:
  /v2/vaults/:
    get:
      tags:
      - General
      description: Retrieves a filtered list of vaults with their basic information including address, network, associated asset details, and transactional support status.
      parameters:
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/PerPageQueryParam'
        - name: network
          in: query
          required: false
          description: Include only vaults with provided network (name or CAIP).
          schema:
            allOf:
              - $ref: '#/components/schemas/NetworkEnumFilter'
        - name: assetSymbol
          in: query
          required: false
          description: Include only vaults with an asset of provided symbol(ticker).
          schema:
            allOf:
              - $ref: '#/components/schemas/AssetSymbolFilter'
        - $ref: '#/components/parameters/OnlyTransactionalQueryParam'
        - $ref: '#/components/parameters/OnlyAppFeaturedQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: Array of supported vaults with their basic information.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/VaultBasic'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/assets/:
    get:
      tags:
      - General
      description: Retrieves a filtered list of supported assets with their metadata including address, symbol, name, decimals, and network information.
      parameters:
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/PerPageQueryParam'
        - name: network
          in: query
          required: false
          description: Include only assets on a specific network (name or CAIP).
          schema:
            allOf:
              - $ref: '#/components/schemas/NetworkEnumFilter'
      security:
        - apiKey: []
      responses:
        '200':
          description: Array of supported assets.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/Asset'
                            - type: object
                              properties:
                                network:
                                  $ref: '#/components/schemas/Network'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/networks/:
    get:
      tags:
      - General
      description: Retrieves a complete list of supported blockchain networks with their identifiers including network name, chain ID, and CAIP format identifier.
      security:
        - apiKey: []
      responses:
        '200':
          description: Array of supported networks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Network'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/tags/:
    get:
      tags:
      - General
      description: Retrieves a complete list of available vault categorization tags that can be used for filtering and organizing vault data.
      security:
        - apiKey: []
      responses:
        '200':
          description: Array of supported tags.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example: ["Lending", "RWA"]
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v2/detailed-vaults/:
    get:
      tags:
      - Detailed Vaults
      description: Retrieves a comprehensive list of vaults with detailed performance metrics including APY, TVL, rewards, risk scores, and protocol information based on specified filters.
      parameters:
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/PerPageQueryParam'
        - $ref: '#/components/parameters/AllowedNetworksQueryParam'
        - $ref: '#/components/parameters/DisallowedNetworksQueryParam'
        - $ref: '#/components/parameters/AllowedAssetsQueryParam'
        - $ref: '#/components/parameters/DisallowedAssetsQueryParam'
        - $ref: '#/components/parameters/AllowedProtocolsQueryParam'
        - $ref: '#/components/parameters/DisallowedProtocolsQueryParam'
        - $ref: '#/components/parameters/MinTvlQueryParam'
        - $ref: '#/components/parameters/MaxTvlQueryParam'
        - $ref: '#/components/parameters/TagsQueryParam'
        - $ref: '#/components/parameters/OnlyTransactionalQueryParam'
        - $ref: '#/components/parameters/OnlyAppFeaturedQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: Array of supported vaults with detailed metrics.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/VaultDetails'
                  errors:
                    allOf:
                      - $ref: '#/components/schemas/CustomErrorsAll'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/detailed-vaults/{network}/{vaultAddress}:
    get:
      tags:
      - Detailed Vaults
      description: Retrieves complete performance analytics and metrics for a specific vault identified by its network and contract address.
      parameters:
        - name: network
          in: path
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/NetworkEnumFilter'
        - name: vaultAddress
          in: path
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/Address'
      security:
        - apiKey: []
      responses:
        '200':
          description: Vault detailed metrics.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/VaultDetails'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/detailed-vaults/{network}/{vaultAddress}/apy:
    get:
      tags:
      - Detailed Vaults
      description: Retrieves detailed APY breakdown for a specific vault, including base yield and rewards components across different time intervals (1-day, 7-day, 30-day).
      parameters:
        - name: network
          in: path
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/NetworkEnumFilter'
        - name: vaultAddress
          in: path
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/Address'
      security:
        - apiKey: []
      responses:
        '200':
          description: Apy breakdown.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ApyBreakdownForIntervals'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/detailed-vaults/{network}/{vaultAddress}/tvl:
    get:
      tags:
      - Detailed Vaults
      description: Retrieves Total Value Locked (TVL) metrics for a specific vault, including both native token amount and USD value representation.
      parameters:
        - name: network
          in: path
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/NetworkEnumFilter'
        - name: vaultAddress
          in: path
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/Address'
      security:
        - apiKey: []
      responses:
        '200':
          description: Tvl data.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/AmountBreakdown'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
          
  /v2/benchmarks/:
    get:
      tags:
      - Benchmarks
      description: Retrieves vaults.fyi curated benchmark data for USD and ETH yield performance, aggregated across the specified networks with detailed APY metrics and contributing vault information.
      parameters:
        - $ref: '#/components/parameters/IncludedNetworksQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: Benchmarks data
          content:
            application/json:
              schema:
                type: object
                properties:
                  usd:
                    allOf:
                    - $ref: '#/components/schemas/BenchmarkData'
                  eth:
                    allOf:
                    - $ref: '#/components/schemas/BenchmarkData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v2/historical/{network}/{vaultAddress}:
    get:
      tags:
      - Historical (PRO)
      description: Retrieves time-series historical data for both APY and TVL metrics for a specific vault, allowing for trend analysis across customizable time periods.
      parameters:
        - $ref: '#/components/parameters/NetworkPathParam'
        - $ref: '#/components/parameters/VaultAddressPathParam'
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/PerPageQueryParam'
        - $ref: '#/components/parameters/ApyIntervalQueryParam'
        - $ref: '#/components/parameters/FromTimestampQueryParam'
        - $ref: '#/components/parameters/ToTimestampQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: Historical tvl and apy data.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/HistoricalPointTime'
                      properties:
                        apy:
                          allOf:
                            - $ref: '#/components/schemas/ApyBreakdown'
                        tvl:
                          allOf:
                            - $ref: '#/components/schemas/AmountBreakdown'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/historical/{network}/{vaultAddress}/apy:
    get:
      tags:
      - Historical (PRO)
      description: Retrieves time-series historical APY data for a specific vault, including base yield and rewards components over a customizable time range.
      parameters:
        - $ref: '#/components/parameters/NetworkPathParam'
        - $ref: '#/components/parameters/VaultAddressPathParam'
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/PerPageQueryParam'
        - $ref: '#/components/parameters/ApyIntervalQueryParam'
        - $ref: '#/components/parameters/FromTimestampQueryParam'
        - $ref: '#/components/parameters/ToTimestampQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: Historical apy data.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/HistoricalPointTime'
                            - type: object
                              properties:
                                apy:
                                  allOf:
                                    - $ref: '#/components/schemas/ApyBreakdown'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/historical/{network}/{vaultAddress}/tvl:
    get:
      tags:
      - Historical (PRO)
      description: Retrieves time-series historical TVL data for a specific vault, tracking capital flow trends in both native token amount and USD value over a customizable time range.
      parameters:
        - $ref: '#/components/parameters/NetworkPathParam'
        - $ref: '#/components/parameters/VaultAddressPathParam'
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/PerPageQueryParam'
        - $ref: '#/components/parameters/ApyIntervalQueryParam'
        - $ref: '#/components/parameters/FromTimestampQueryParam'
        - $ref: '#/components/parameters/ToTimestampQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: Historical tvl data.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                properties:
                  nextPage:
                    allOf:
                      - $ref: '#/components/schemas/PageNumber'
                  data:
                    type: array
                    items:
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/HistoricalPointTime'
                      properties:
                        tvl:
                          allOf:
                            - $ref: '#/components/schemas/AmountBreakdown'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
          
  /v2/transactional/context/{userAddress}/{network}/{vaultAddress}:
    get:
      tags:
        - Transactional (PRO)
      description: Retrieves the complete transactional context for a user's interaction with a specific vault, including available deposit/redeem steps, current balances, and claimable rewards.
      parameters:
        - $ref: '#/components/parameters/UserAddressPathParam'
        - $ref: '#/components/parameters/NetworkPathParam'
        - $ref: '#/components/parameters/VaultAddressPathParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: Transactional context.
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentDepositStep:
                    type: string
                  depositSteps:
                    type: array
                    items:
                      $ref: '#/components/schemas/Step'
                  currentRedeemStep:
                    type: string
                  redeemSteps:
                    type: array
                    items:
                      $ref: '#/components/schemas/Step'
                  lpToken:
                    $ref: '#/components/schemas/LpTokenWithBalance'
                  asset:
                    $ref: '#/components/schemas/AssetForContext'
                  additionalAssets:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetForContext'
                  childrenPositions:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          $ref: '#/components/schemas/Address'
                        lpToken:
                          $ref: '#/components/schemas/LpTokenWithBalance'
                        asset:
                          $ref: '#/components/schemas/AssetForContext'
                        additionalAssets:
                          type: array
                          items:
                            $ref: '#/components/schemas/AssetForContext'
                  vaultSpecificData:
                    type: object
                    additionalProperties: {}
                  rewards:
                    type: object
                    properties:
                      claimable:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnclaimedReward'
                      currentStep:
                        type: string
                      steps:
                        type: array
                        items:
                          $ref: '#/components/schemas/Step'
                    required:
                      - currentDepositStep
                      - depositSteps
                      - currentRedeemStep
                      - redeemSteps
                      - lpTokenBalance
                      - idleAssets
                      - lockedValueInAssets
                      - unclaimedAssets
                    additionalProperties: false
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/transactional/{action}/{userAddress}/{network}/{vaultAddress}/:
    get:
      tags:
        - Transactional (PRO)
      description: Retrieves executable transaction payloads for specific actions (deposit, redeem, claim) for a user interacting with a vault, including ready-to-sign transaction data and optional simulation results.
      parameters:
        - $ref: '#/components/parameters/ActionPathParam'
        - $ref: '#/components/parameters/UserAddressPathParam'
        - $ref: '#/components/parameters/NetworkPathParam'
        - $ref: '#/components/parameters/VaultAddressPathParam'
        - name: simulate
          in: query
          required: false
          schema:
            type: string
            enum:
              - 'true'
              - 'false'
            default: 'false'
        - name: assetAddress
          in: query
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/Address'
        - name: amount
          in: query
          required: true
          schema:
            type: string
      security:
        - apiKey: []
      responses:
        '200':
          description: Actions for the specified operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentActionIndex:
                    type: number
                  actions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Action'
                required:
                  - currentActionIndex
                  - actions
                additionalProperties: false
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
                
  /v2/portfolio/idle-assets/{userAddress}:
    get:
      tags:
        - Portfolio (PRO)
      description: Retrieves detailed on-chain wallet balances for a specific user across multiple networks and assets, including both native token amounts and USD value representations.
      parameters:
        - $ref: '#/components/parameters/UserAddressPathParam'
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/PerPageQueryParam'
        - $ref: '#/components/parameters/AllowedNetworksQueryParam'
        - $ref: '#/components/parameters/DisallowedNetworksQueryParam'
        - $ref: '#/components/parameters/AllowedAssetsQueryParam'
        - $ref: '#/components/parameters/DisallowedAssetsQueryParam'
        - $ref: '#/components/parameters/MinUsdValueThresholdQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: Array of assets with user's balances.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/AssetWithBalance'
                        - type: object
                          properties:
                            network:
                              $ref: '#/components/schemas/Network'
                  errors:
                    allOf:
                      - $ref: '#/components/schemas/CustomErrorsNoProtocols'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/portfolio/positions/{userAddress}:
    get:
      tags:
        - Portfolio (PRO)
      description: Retrieves all active vault positions for a specific user across multiple networks and protocols, including deposit amounts, current APY, and unclaimed rewards.
      parameters:
        - $ref: '#/components/parameters/UserAddressPathParam'
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/PerPageQueryParam'
        - $ref: '#/components/parameters/ApyIntervalQueryParam'
        - $ref: '#/components/parameters/AllowedNetworksQueryParam'
        - $ref: '#/components/parameters/DisallowedNetworksQueryParam'
        - $ref: '#/components/parameters/AllowedAssetsQueryParam'
        - $ref: '#/components/parameters/DisallowedAssetsQueryParam'
        - $ref: '#/components/parameters/AllowedProtocolsQueryParam'
        - $ref: '#/components/parameters/DisallowedProtocolsQueryParam'
        - $ref: '#/components/parameters/MinUsdValueThresholdQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: Array of user's positions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/VaultPosition'
                  errors:
                    allOf:
                      - $ref: '#/components/schemas/CustomErrorsAll'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/portfolio/positions/{userAddress}/{network}/{vaultAddress}:
    get:
      tags:
        - Portfolio (PRO)
      description: Retrieves detailed information about a user's position in a specific vault, including deposit amount, current APY, and unclaimed rewards for focused analysis.
      parameters:
        - $ref: '#/components/parameters/UserAddressPathParam'
        - $ref: '#/components/parameters/NetworkPathParam'
        - $ref: '#/components/parameters/VaultAddressPathParam'
        - $ref: '#/components/parameters/ApyIntervalQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: User's position on a specific vault.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/VaultPosition'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/portfolio/events/{userAddress}/{network}/{vaultAddress}:
    get:
      tags:
      - Portfolio (PRO)
      description: Retrieves chronological event history for a user's interactions with a specific vault, including deposits, withdrawals, and transfers with timestamp and block number information.
      parameters:
        - $ref: '#/components/parameters/UserAddressPathParam'
        - $ref: '#/components/parameters/NetworkPathParam'
        - $ref: '#/components/parameters/VaultAddressPathParam'
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/PerPageQueryParam'
        - $ref: '#/components/parameters/FromTimestampQueryParam'
        - $ref: '#/components/parameters/ToTimestampQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: User events.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/HistoricalPointTime'
                            - type: object
                              properties:
                                eventType:
                                  allOf:
                                    - $ref: '#/components/schemas/EventType'
                                eventAssetAmount:
                                  allOf:
                                    - $ref: '#/components/schemas/AmountBreakdown'
                                resultingPosition:
                                  allOf:
                                    - $ref: '#/components/schemas/AmountBreakdown'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/portfolio/returns/{userAddress}/{network}/{vaultAddress}:
    get:
      tags:
      - Portfolio (PRO)
      description: Retrieves the cumulative investment returns for a user's position in a specific vault, showing total yield earned in both native token amount and USD value.
      parameters:
        - $ref: '#/components/parameters/UserAddressPathParam'
        - $ref: '#/components/parameters/NetworkPathParam'
        - $ref: '#/components/parameters/VaultAddressPathParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: User returns.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/AmountBreakdown'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/portfolio/best-deposit-options/{userAddress}:
    get:
      tags:
        - Portfolio (PRO)
      description: Analyzes a user's existing wallet balances and recommends optimal vault deposit opportunities based on yield performance, risk parameters, and user-defined criteria.
      parameters:
        - $ref: '#/components/parameters/UserAddressPathParam'
        - $ref: '#/components/parameters/ApyIntervalQueryParam'
        - $ref: '#/components/parameters/AllowedNetworksQueryParam'
        - $ref: '#/components/parameters/DisallowedNetworksQueryParam'
        - $ref: '#/components/parameters/AllowedAssetsQueryParam'
        - $ref: '#/components/parameters/DisallowedAssetsQueryParam'
        - $ref: '#/components/parameters/AllowedProtocolsQueryParam'
        - $ref: '#/components/parameters/DisallowedProtocolsQueryParam'
        - $ref: '#/components/parameters/MinTvlQueryParam'
        - $ref: '#/components/parameters/MinApyQueryParam'
        - $ref: '#/components/parameters/MinUsdValueThresholdQueryParam'
        - $ref: '#/components/parameters/MaxVaultsPerAssetQueryParam'
        - $ref: '#/components/parameters/AlwaysReturnAssetsQueryParam'
        - $ref: '#/components/parameters/OnlyTransactionalQueryParam'
        - $ref: '#/components/parameters/OnlyAppFeaturedQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: Best deposit options for the user.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BestDepositOptionsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/portfolio/best-vault/{userAddress}:
    get:
      tags:
        - Portfolio (PRO)
      description: Identifies and recommends the single highest-performing vault opportunity for a user based on their wallet balances, yield metrics, risk parameters, and customizable investment criteria.
      parameters:
        - $ref: '#/components/parameters/UserAddressPathParam'
        - $ref: '#/components/parameters/ApyIntervalQueryParam'
        - $ref: '#/components/parameters/AllowedNetworksQueryParam'
        - $ref: '#/components/parameters/DisallowedNetworksQueryParam'
        - $ref: '#/components/parameters/AllowedAssetsQueryParam'
        - $ref: '#/components/parameters/DisallowedAssetsQueryParam'
        - $ref: '#/components/parameters/AllowedProtocolsQueryParam'
        - $ref: '#/components/parameters/DisallowedProtocolsQueryParam'
        - $ref: '#/components/parameters/MinTvlQueryParam'
        - $ref: '#/components/parameters/MinApyQueryParam'
        - $ref: '#/components/parameters/MinUsdValueThresholdQueryParam'
        - $ref: '#/components/parameters/OnlyTransactionalQueryParam'
        - $ref: '#/components/parameters/OnlyAppFeaturedQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: Best vault for the user.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BestVaultResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    apiKey:
      type: apiKey
      name: x-api-key
      in: header

  schemas:
    NetworkCaip:
      type: string
      pattern: "^eip155:\\d+$"
      example: "eip155:1"
    Network:
      type: object
      properties:
        name:
          type: string
          example: "mainnet"
        chainId:
          type: number
          example: 1
        networkCaip:
          allOf:
            - $ref: '#/components/schemas/NetworkCaip'
    AssetCaip:
      type: string
      pattern: "^eip155:\\d+\\/(erc20:0x[0-9a-fA-F]{40}|slip44:\\d+)$"
      example: "erc20:0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
    Address:
      type: string
      pattern: "^0x[0-9a-fA-F]{40}$"
      example: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
    Asset:
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/Address'
        assetCaip:
          allOf:
            - $ref: '#/components/schemas/AssetCaip'
        name:
          type: string
          example: "USD Coin"
        symbol:
          type: string
          example: "USDC"
        decimals:
          type: number
          example: 6
        assetLogo:
          type: string
          example: "https://images.vaults.fyi/tokens/usdc.png"
    LpToken:
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/Address'
        assetCaip:
          allOf:
            - $ref: '#/components/schemas/AssetCaip'
        name:
          type: string
          example: "Aave USD Coin"
        symbol:
          type: string
          example: "aUSDC"
        decimals:
          type: number
          example: 6
    AmountNative:
      type: string
      example: "123120000"
    AmountUsd:
      type: string
      example: "123.12"
    AssetWithBalance:
      allOf:
        - $ref: '#/components/schemas/Asset'
        - type: object
          properties:
            balanceNative:
              allOf:
                - $ref: '#/components/schemas/AmountNative'
            balanceUsd:
              allOf:
                - $ref: '#/components/schemas/AmountUsd'
    AssetForContext:
      allOf:
        - $ref: '#/components/schemas/AssetWithBalance'
        - type: object
          properties:
            unclaimedNative:
              $ref: '#/components/schemas/AmountNative'
            unclaimedUsd:
              $ref: '#/components/schemas/AmountUsd'
            positionValueInAsset:
              $ref: '#/components/schemas/AmountNative'
    LpTokenWithBalance:
      allOf:
        - $ref: '#/components/schemas/LpToken'
        - type: object
          properties:
            balanceNative:
              $ref: '#/components/schemas/AmountNative'
            balanceUsd:
              $ref: '#/components/schemas/AmountUsd'
    IsTransactional:
      type: boolean
      example: true
    IsAppFeatured:
      type: boolean
      example: true
    PageNumber:
      type: integer
      minimum: 0
      example: 1
    ItemsOnPage:
      type: integer
      minimum: 0
      example: 10
    PagedResponse:
      type: object
      properties:
        itemsOnPage:
          allOf:
            - $ref: '#/components/schemas/ItemsOnPage'
        nextPage:
          allOf:
            - $ref: '#/components/schemas/PageNumber'
    Protocol:
      type: object
      properties:
        name:
          type: string
          example: "AAVE"
        product:
          type: string
          example: "Collateral Vault"
        version:
          type: string
          example: "v2"
        protocolUrl:
          type: string
          example: "https://app.aave.com/"
        protocolLogo:
          type: string
          example: "https://images.vaults.fyi/protocols/aave.png"
    VaultBenchmarks:
      type: object
      properties:
        name:
          type: string
          example: "Aave v3 USDC"
        address:
          allOf:
            - $ref: '#/components/schemas/Address'
        network:
          allOf:
            - $ref: '#/components/schemas/Network'
    BenchmarkData:
      type: object
      properties:
        apy:
          allOf:
            - $ref: '#/components/schemas/ApyBreakdown'
        includedVaults:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/VaultBenchmarks'

    VaultBasicWithoutAsset:
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/Address'
        network:
          allOf:
            - $ref: '#/components/schemas/Network'
        isTransactional:
          allOf:
            - $ref: '#/components/schemas/IsTransactional'
        isAppFeatured:
          allOf:
            - $ref: '#/components/schemas/IsAppFeatured'
    VaultBasic:
      allOf:
        - $ref: '#/components/schemas/VaultBasicWithoutAsset'
        - type: object
          properties:
            asset:
              allOf:
                - $ref: '#/components/schemas/Asset'
    Apy:
      type: number
      minimum: 0
      example: 0.12
    ApyForIntervals:
      type: object
      properties:
        1day:
          allOf:
            - $ref: '#/components/schemas/Apy'
        7day:
          allOf:
            - $ref: '#/components/schemas/Apy'
        30day:
          allOf:
            - $ref: '#/components/schemas/Apy'
    ApyBreakdown:
      type: object
      properties:
        base:
          allOf:
            - $ref: '#/components/schemas/Apy'
        rewards:
          allOf:
            - $ref: '#/components/schemas/Apy'
        total:
          allOf:
            - $ref: '#/components/schemas/Apy'
      required:
        - base
        - total
    ApyBreakdownForIntervals:
      type: object
      properties:
        base:
          allOf:
            - $ref: '#/components/schemas/ApyForIntervals'
        rewards:
          allOf:
            - $ref: '#/components/schemas/ApyForIntervals'
        total:
          allOf:
            - $ref: '#/components/schemas/ApyForIntervals'
      required:
        - base
        - total
    AmountBreakdown:
      type: object
      properties:
        native:
          type: string
          example: '100000000000000000000000'
        usd:
          type: string
          example: '100000'
    RewardsDetails:
      type: array
      items:
        type: object
        properties:
          apy:
            allOf:
              - $ref: '#/components/schemas/ApyForIntervals'
          asset:
            allOf:
              - $ref: '#/components/schemas/Asset'
    Score:
      type: number
      minimum: 0
      maximum: 100
      example: 55
    ScoreDetails:
      type: object
      properties:
        vaultScore:
          allOf:
            - $ref: '#/components/schemas/Score'
        vaultTvlScore:
          allOf:
            - $ref: '#/components/schemas/Score'
        protocolTvlScore:
          allOf:
            - $ref: '#/components/schemas/Score'
        holderScore:
          allOf:
            - $ref: '#/components/schemas/Score'
        networkScore:
          allOf:
            - $ref: '#/components/schemas/Score'
        assetScore:
          allOf:
            - $ref: '#/components/schemas/Score'
    Tags:
      type: array
      items:
        type: string
      example:
        - "Lending"
        - "RWA"
    VaultDetails:
      type: object
      allOf:
        - $ref: '#/components/schemas/VaultBasic'
      properties:
        name:
          type: string
          example: "Aave v3 USDC"
        protocol:
          $ref: '#/components/schemas/Protocol'
        lpToken:
          $ref: '#/components/schemas/LpToken'
        additionalAssets:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
        lendUrl:
          type: string
          example: "https://app.vaults.fyi/opportunity/mainnet/0x98C23E9d8f34FEFb1B7BD6a91B7FF122F4e16F5c"
        protocolVaultUrl:
          type: string
          example: "https://app.aave.com/reserve-overview/?underlyingAsset=0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48&marketName=proto_mainnet_v3"
        description:
          type: string
          example: "Lenders earn yield from interest paid by borrowers. Borrowers deposit collateral into Aave and borrow overcollateralized loans from liquidity pools. The interest paid by borrowers is distributed to lenders who have supplied assets to the liquidity pool."
        tags:
          $ref: '#/components/schemas/Tags'
        holders:
          type: number
          example: 123
        apy:
          $ref: '#/components/schemas/ApyBreakdownForIntervals'
        tvl:
          $ref: '#/components/schemas/AmountBreakdown'
        rewards:
          $ref: '#/components/schemas/RewardsDetails'
        score:
          $ref: '#/components/schemas/ScoreDetails'
        children:
          type: object
          properties:
            address:
              $ref: '#/components/schemas/Address'
            asset:
              $ref: '#/components/schemas/Asset'
            lpToken:
              $ref: '#/components/schemas/LpToken'
            additionalAssets:
              type: array
              items:
                $ref: '#/components/schemas/Asset'
    VaultPosition:
      allOf:
        - $ref: '#/components/schemas/VaultBasic'
        - type: object
          properties:
            name:
              type: string
              example: "Aave v3 USDC"
            protocol:
              $ref: '#/components/schemas/Protocol'
            apy:
              $ref: '#/components/schemas/ApyBreakdown'
            asset:
              $ref: '#/components/schemas/AssetForContext'
            additionalAssets:
              type: array
              items:
                $ref: '#/components/schemas/AssetForContext'
            lpToken:
              $ref: '#/components/schemas/LpTokenWithBalance'
            childrenPositions:
              type: array
              items:
                type: object
                properties:
                  address:
                    $ref: '#/components/schemas/Address'
                  lpToken:
                    $ref: '#/components/schemas/LpTokenWithBalance'
                  asset:
                    $ref: '#/components/schemas/AssetForContext'
                  additionalAssets:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetForContext'
    HistoricalPointTime:
      type: object
      properties:
        timestamp:
          type: integer
          minimum: 0
          example: 1741181887
          description: Epoch timestamp in seconds
        blockNumber:
          type: integer
          minimum: 0
          example: 21980991
          description: Block number
    
    Tx:
      type: object
      properties:
        to:
          type: string
          pattern: "^0x[a-fA-F0-9]{40}$"
        chainId:
          type: number
          example: 1
        data:
          type: string
          pattern: "^0x[a-fA-F0-9]$"
        value:
          type: string
          pattern: "^0x[a-fA-F0-9]$"
      required:
        - to
        - chainId
      additionalProperties: false
    AssetAmounts:
      type: object
      additionalProperties:
        type: string
      example:
        "0xAbC1234567890deF4567890abC1234567890dEf": "10500000"
        "0xDeF1234567890aBc1234567890deF4567890AbC": "3200000000000000000"
    Simulation:
      type: object
      properties:
        url:
          type: string
        status:
          type: string
          enum:
            - success
            - failure
            - internal server error
        tokensReceived:
          allOf:
            - $ref: '#/components/schemas/AssetAmounts'
        tokensSpent:
          allOf:
            - $ref: '#/components/schemas/AssetAmounts'
      required:
        - url
        - status
      additionalProperties: false
    Action:
      type: object
      properties:
        name:
          type: string
        tx:
          $ref: '#/components/schemas/Tx'
        simulation:
          $ref: '#/components/schemas/Simulation'
      required:
        - name
        - tx
      additionalProperties: false
    Step:
      type: object
      properties:
        actions:
          type: array
          items:
            type: string
        actionsUrl:
          type: string
        name:
          type: string
          enum:
            - deposit
            - redeem
            - requestRedeem
            - claimRedeem
            - claim
          example: "step"
    UnclaimedReward:
      type: object
      properties:
        amount:
          type: string
        asset:
          $ref: '#/components/schemas/Asset'
      required:
        - amount
        - asset
    
    BestDepositOptionsResponse:
      type: object
      properties:
        requestedAddress:
          allOf:
            - $ref: '#/components/schemas/Address'
        userBalances:
          type: array
          items:
            type: object
            properties:
              asset:
                allOf:
                  -  $ref: '#/components/schemas/AssetWithBalance'
              depositOptions:
                type: array
                items:
                  allOf:
                    -  $ref: '#/components/schemas/DepositOption'
        errors:
          allOf:
            - $ref: '#/components/schemas/CustomErrorsAll'
      required:
        - requestedAddress
        - userBalances
      additionalProperties: false
      
    BestVaultResponse:
      type: object
      properties:
        requestedAddress:
          allOf:
            - $ref: '#/components/schemas/Address'
        asset:
          allOf:
            -  $ref: '#/components/schemas/AssetWithBalance'
        vault:
          allOf:
            -  $ref: '#/components/schemas/DepositOption'
        errors:
          allOf:
            - $ref: '#/components/schemas/CustomErrorsAll'
      required:
        - requestedAddress
        - asset
        - vault
      additionalProperties: false
      
    DepositOption:
      allOf:
        - $ref: '#/components/schemas/VaultBasicWithoutAsset'
        - type: object
          properties:
            name:
              type: string
              example: "Aave v3 USDC"
            protocol:
              allOf:
                - $ref: '#/components/schemas/Protocol'
            apy:
              allOf:
                - $ref: '#/components/schemas/ApyBreakdown'
            tvl:
              allOf:
                - $ref: '#/components/schemas/AmountBreakdown'
            tags:
              allOf:
                - $ref: '#/components/schemas/Tags'
            projectedUsdAnnualEarnings:
              type: string
              example: "112.23"
            lendUrl:
              type: string
              example: "https://app.vaults.fyi/opportunity/mainnet/0x98C23E9d8f34FEFb1B7BD6a91B7FF122F4e16F5c"
            protocolVaultUrl:
              type: string
              example: "https://app.aave.com/reserve-overview/?underlyingAsset=0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48&marketName=proto_mainnet_v3"

    EventType:
      type: string
      enum:
        - TransferIn
        - TransferOut
        - Deposit
        - Withdrawal
      example: "Deposit"

    CustomErrors:
      type: array
      items:
        type: string
    CustomErrorsAll:
      type: object
      properties:
        unsupportedNetworks:
          allOf:
            - $ref: '#/components/schemas/CustomErrors'
        unsupportedAssets:
          allOf:
            - $ref: '#/components/schemas/CustomErrors'
        unsupportedProtocols:
          allOf:
            - $ref: '#/components/schemas/CustomErrors'
    CustomErrorsNoProtocols:
      type: object
      properties:
        unsupportedNetworks:
          allOf:
            - $ref: '#/components/schemas/CustomErrors'
        unsupportedAssets:
          allOf:
            - $ref: '#/components/schemas/CustomErrors'

    NetworkEnumFilter:
      type: string
      enum:
        - mainnet
        - arbitrum
        - optimism
        - polygon
        - base
        - gnosis
        - unichain
        - eip155:1
        - eip155:42161
        - eip155:10
        - eip155:137
        - eip155:8453
        - eip155:100
        - eip155:130
    AssetSymbolFilter:
      type: string
      example: "USDC"
    OnlyTransactionalFilter:
      type: boolean
      default: false
      description: Include only vaults that are supported in the transactional interface.
    OnlyAppFeaturedFilter:
      type: boolean
      default: false
      description: Include only vaults that are featured in app.vaults.fyi
    ApyIntervalFilter:
      enum:
        - "1day"
        - "7day"
        - "30day"
      default: "7day"
      description: Resolution of the APY data.
    NetworksFilter:
      type: array
      items:
        type: string
        allOf:
          - $ref: '#/components/schemas/NetworkEnumFilter'
    AllowedNetworksFilter:
      allOf:
        - $ref: '#/components/schemas/NetworksFilter'
      default:
        - base
        - mainnet
        - arbitrum
        - optimism
      description: Networks to be included (name or CAIP).
    DisallowedNetworksFilter:
      allOf:
        - $ref: '#/components/schemas/NetworksFilter'
      example:
        - "polygon"
      description: Networks to be excluded (name or CAIP). The parameter is ignored if "allowedNetworks" is specified.
    AllowedAssetsFilter:
      type: array
      items:
        type: string
        minLength: 1
      description: Assets to be included by symbol(ticker)
      example:
        - "USDC"
        - "USDT"
    DisallowedAssetsFilter:
      type: array
      items:
        type: string
        minLength: 1
      description: Assets to be excluded by symbol(ticker)
      example:
        - "DAI"
    AllowedProtocolsFilter:
      type: array
      items:
        type: string
        minLength: 1
      description: Protocols to be included by name
      example:
        - "AAVE"
        - "Compound"
    DisallowedProtocolsFilter:
      type: array
      items:
        type: string
        minLength: 1
      description: Protocols to be excluded by name
      example:
        - "Ethena"
    MinTvlFilter:
      type: number
      minimum: 0
      default: 100000
      description: Minimum TVL in USD of the vaults to be included
    MaxTvlFilter:
      type: number
      minimum: 0
      description: Maximum TVL in USD of the vaults to be included
    MinApyFilter:
      type: number
      minimum: 0
      example: 0.12
      description: Minimum APY of the vaults to be included
    PerPageFilter:
      type: integer
      exclusiveMinimum: true
      minimum: 0
      maximum: 250
      default: 10
      description: Items to include on a single page
    PageNumberFilter:
      type: integer
      minimum: 0
      default: 0
    TagsFilter:
      type: array
      items:
        type: string
        minLength: 1
      description: Tags to be included
      example:
        - "Lending"
        - "RWA"
    FromTimestampFilter:
      type: integer
      minimum: 0
      default: 0
      description: Epoch timestamp in seconds
    ToTimestampFilter:
      type: integer
      minimum: 0
      example: 1741181887
      description: Epoch timestamp in seconds
    MinBalanceUsdThresholdFilter:
      type: number
      minimum: 0
      default: 0
      example: 0.5
      
  parameters:
    NetworkPathParam:
      name: network
      in: path
      required: true
      schema:
        allOf:
          - $ref: '#/components/schemas/NetworkEnumFilter'
    VaultAddressPathParam:
      name: vaultAddress
      in: path
      required: true
      schema:
        allOf:
          - $ref: '#/components/schemas/Address'
    UserAddressPathParam:
      name: userAddress
      in: path
      required: true
      schema:
        allOf:
          - $ref: '#/components/schemas/Address'
    ActionPathParam:
      name: action
      in: path
      required: true
      schema:
        enum:
          - deposit
          - redeem
          - request-redeem
          - claim-redeem
          - claim-rewards
    PageQueryParam:
      name: page
      in: query
      required: true
      schema:
        allOf:
          - $ref: '#/components/schemas/PageNumberFilter'
    PerPageQueryParam:
      name: perPage
      in: query
      required: false
      schema:
        allOf:
          - $ref: '#/components/schemas/PerPageFilter'
    ApyIntervalQueryParam:
      name: apyInterval
      in: query
      required: true
      schema:
        allOf:
          - $ref: '#/components/schemas/ApyIntervalFilter'
    FromTimestampQueryParam:
      name: fromTimestamp
      in: query
      required: false
      schema:
        allOf:
          - $ref: '#/components/schemas/FromTimestampFilter'
    ToTimestampQueryParam:
      name: toTimestamp
      in: query
      required: false
      schema:
        allOf:
          - $ref: '#/components/schemas/ToTimestampFilter'
    OnlyTransactionalQueryParam:
      name: onlyTransactional
      in: query
      required: false
      description: Include only vaults that are supported in the transactional interface.
      schema:
        allOf:
          - $ref: '#/components/schemas/OnlyTransactionalFilter'
    OnlyAppFeaturedQueryParam:
      name: onlyAppFeatured
      in: query
      required: false
      description: Include only vaults that are featured in app.vaults.fyi
      schema:
        allOf:
          - $ref: '#/components/schemas/OnlyAppFeaturedFilter'
    AllowedNetworksQueryParam:
      name: allowedNetworks
      in: query
      required: false
      description: Networks to be included (name or CAIP).
      schema:
        allOf:
          - $ref: '#/components/schemas/AllowedNetworksFilter'
    DisallowedNetworksQueryParam:
      name: disallowedNetworks
      in: query
      required: false
      description: Networks to be excluded (name or CAIP). The parameter is ignored if "allowedNetworks" is specified.
      schema:
        allOf:
          - $ref: '#/components/schemas/DisallowedNetworksFilter'
    IncludedNetworksQueryParam:
      name: includedNetworks
      in: query
      required: true
      schema:
        type: array
        items:
          allOf:
            - $ref: '#/components/schemas/NetworkEnumFilter'
        default:
          - "mainnet"
    AllowedAssetsQueryParam:
      name: allowedAssets
      in: query
      required: false
      description: Assets to be included by symbol(ticker)
      schema:
        allOf:
          - $ref: '#/components/schemas/AllowedAssetsFilter'
    DisallowedAssetsQueryParam:
      name: disallowedAssets
      in: query
      required: false
      description: Assets to be excluded by symbol(ticker)
      schema:
        allOf:
          - $ref: '#/components/schemas/DisallowedAssetsFilter'
    AllowedProtocolsQueryParam:
      name: allowedProtocols
      in: query
      required: false
      description: Protocols to be included by name
      schema:
        allOf:
          - $ref: '#/components/schemas/DisallowedAssetsFilter'
    DisallowedProtocolsQueryParam:
      name: disallowedProtocols
      in: query
      required: false
      description: Protocols to be excluded by name
      schema:
        allOf:
          - $ref: '#/components/schemas/DisallowedAssetsFilter'
    MinTvlQueryParam:
      name: minTvl
      in: query
      required: false
      description: Minimum TVL in USD of the vaults to be included
      schema:
        allOf:
          - $ref: '#/components/schemas/MinTvlFilter'
    MaxTvlQueryParam:
      name: maxTvl
      in: query
      required: false
      description: Maximum TVL in USD of the vaults to be included
      schema:
        allOf:
          - $ref: '#/components/schemas/MaxTvlFilter'
    TagsQueryParam:
      name: tags
      in: query
      required: false
      description: Tags to be included
      schema:
        allOf:
          - $ref: '#/components/schemas/TagsFilter'
    MinUsdValueThresholdQueryParam:
      name: minUsdValueThreshold
      in: query
      required: false
      description: Minimum value in USD of the items to be included
      schema:
        allOf:
          - $ref: '#/components/schemas/MinBalanceUsdThresholdFilter'
    MinApyQueryParam:
      name: minApy
      in: query
      required: false
      description: Minimum APY of the vaults to be included
      schema:
        allOf:
          - $ref: '#/components/schemas/MinApyFilter'
    MaxVaultsPerAssetQueryParam:
      name: maxVaultsPerAsset
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 5
        default: 3
        description: Maximum number of vaults per asset.
    AlwaysReturnAssetsQueryParam:
      name: alwaysReturnAssets
      in: query
      schema:
        type: array
        items:
          type: string
          minLength: 1
        default: []
        description: Symbols/tickers of assets to always return, regardless of balance.
  
  responses:
    BadRequest:
      description: "Bad Request - Invalid request parameters"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              error:
                type: string
              message:
                type: string
                description: "A JSON array as a string representing detailed validation errors."
    Unauthorized:
      description: "Unauthorized - Missing or wrong API key"
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string
    InternalServerError:
      description: "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request. This could be due to an unhandled exception, misconfiguration, or temporary server issue."
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string
