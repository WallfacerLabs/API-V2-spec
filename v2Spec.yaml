openapi: 3.0.3
info:
  title: Vaults.fyi API
  version: V2
  description: Basic API key use is limited to 10 requests per minute.
tags:
  - name: General
    description: Simple informational endpoints to provide a reference of available data in the API.
  - name: Detailed Vaults
    description: Detailed endpoints for vaults including in depth metrics such as apy, tvl, rewards etc.
  - name: Benchmarks
    description: vaults.fyi curated benchmarks for usd and eth yields.
  - name: Historical (PRO)
    description: Endpoints returning historical vaults metrics.
  - name: Transactional (PRO)
    description: Transactional interface endpoints exposing user's position data, available actions to be taken and ready to sign transactions.
  - name: Portfolio (PRO)
    description: Endpoints providing information about user's balances, positions and tailored opportunities.
paths:
  /v2/vaults/:
    post:
      tags:
      - General
      description: Get a list of vaults given specific filters.
      parameters:
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/PerPageQueryParam'
        - name: network
          in: query
          required: false
          description: Include only vaults with provided network (name or CAIP).
          schema:
            allOf:
              - $ref: '#/components/schemas/NetworkEnumFilter'
        - name: assetSymbol
          in: query
          required: false
          description: Include only vaults with an asset of provided symbol(ticker).
          schema:
            allOf:
              - $ref: '#/components/schemas/AssetSymbolFilter'
        - name: onlyTransactional
          in: query
          required: false
          description: Include only vaults that are supported in the transactional interface.
          schema:
            allOf:
              - $ref: '#/components/schemas/OnlyTransactionalFilter'
        - name: onlyAppFeatured
          in: query
          required: false
          description: Include only vaults that are featured in app.vaults.fyi
          schema:
            allOf:
              - $ref: '#/components/schemas/OnlyAppFeaturedFilter'
      security:
        - apiKey: []
      responses:
        '200':
          description: Array of supported vaults with their basic information.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/VaultBasic'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/assets/:
    post:
      tags:
      - General
      description: Get a list of assets given specific filters.
      parameters:
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/PerPageQueryParam'
        - name: network
          in: query
          required: false
          description: Include only assets on a specific network (name or CAIP).
          schema:
            allOf:
              - $ref: '#/components/schemas/NetworkEnumFilter'
      security:
        - apiKey: []
      responses:
        '200':
          description: Array of supported assets.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/Asset'
                            - type: object
                              properties:
                                network:
                                  $ref: '#/components/schemas/Network'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/networks/:
    get:
      tags:
      - General
      description: Get a list of networks given specific filters
      security:
        - apiKey: []
      responses:
        '200':
          description: Array of supported networks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Network'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/tags/:
    get:
      tags:
      - General
      description: Get a list of tags.
      security:
        - apiKey: []
      responses:
        '200':
          description: Array of supported tags.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example: ["Lending", "RWA"]
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v2/detailed-vaults/:
    post:
      tags:
      - Detailed Vaults
      description: Get a list of vaults with detailed metrics given specific filters.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  allOf:
                    - $ref: '#/components/schemas/PageNumberFilter'
                perPage:
                  allOf:
                    - $ref: '#/components/schemas/PerPageFilter'
                allowedNetworks:
                  allOf:
                    - $ref: '#/components/schemas/AllowedNetworksFilter'
                disallowedNetworks:
                  allOf:
                    - $ref: '#/components/schemas/DisallowedNetworksFilter'
                allowedAssets:
                  allOf:
                    - $ref: '#/components/schemas/AllowedAssetsFilter'
                disallowedAssets:
                  allOf:
                    - $ref: '#/components/schemas/DisallowedAssetsFilter'
                allowedProtocols:
                  allOf:
                    - $ref: '#/components/schemas/AllowedProtocolsFilter'
                disallowedProtocols:
                  allOf:
                    - $ref: '#/components/schemas/DisallowedProtocolsFilter'
                minTvl:
                  allOf:
                    - $ref: '#/components/schemas/MinTvlFilter'
                maxTvl:
                  allOf:
                    - $ref: '#/components/schemas/MaxTvlFilter'
                tags:
                  allOf:
                    - $ref: '#/components/schemas/TagsFilter'
                onlyTransactional:
                  allOf:
                    - $ref: '#/components/schemas/OnlyTransactionalFilter'
                onlyAppFeatured:
                  allOf:
                    - $ref: '#/components/schemas/OnlyAppFeaturedFilter'
              additionalProperties: false
              required:
                - page
      security:
        - apiKey: []
      responses:
        '200':
          description: Array of supported vaults with detailed metrics.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/VaultDetails'
                  errors:
                    allOf:
                      - $ref: '#/components/schemas/CustomErrorsAll'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/detailed-vaults/{network}/{vaultAddress}:
    get:
      tags:
      - Detailed Vaults
      description: Get detailed metrics for a specific vault.
      parameters:
        - name: network
          in: path
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/NetworkEnumFilter'
        - name: vaultAddress
          in: path
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/Address'
      security:
        - apiKey: []
      responses:
        '200':
          description: Vault detailed metrics.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/VaultDetails'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/detailed-vaults/{network}/{vaultAddress}/apy:
    get:
      tags:
      - Detailed Vaults
      description: Get apy breakdown for a specific vault.
      parameters:
        - name: network
          in: path
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/NetworkEnumFilter'
        - name: vaultAddress
          in: path
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/Address'
      security:
        - apiKey: []
      responses:
        '200':
          description: Apy breakdown.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ApyBreakdownForIntervals'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/detailed-vaults/{network}/{vaultAddress}/tvl:
    get:
      tags:
      - Detailed Vaults
      description: Get tvl data for a specific vault.
      parameters:
        - name: network
          in: path
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/NetworkEnumFilter'
        - name: vaultAddress
          in: path
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/Address'
      security:
        - apiKey: []
      responses:
        '200':
          description: Tvl data.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/AmountBreakdown'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
          
  /v2/benchmarks/:
    post:
      tags:
      - Benchmarks
      description: Get vaults.fyi curated benchmarks aggregated through provided networks.
      parameters:
        - name: includedNetworks
          in: query
          required: true
          schema:
            type: array
            items:
              allOf:
                - $ref: '#/components/schemas/NetworkEnumFilter'
            default:
              - "mainnet"
      security:
        - apiKey: []
      responses:
        '200':
          description: Benchmarks data
          content:
            application/json:
              schema:
                type: object
                properties:
                  usd:
                    allOf:
                    - $ref: '#/components/schemas/BenchmarkData'
                  eth:
                    allOf:
                    - $ref: '#/components/schemas/BenchmarkData'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /v2/historical/{network}/{vaultAddress}:
    post:
      tags:
      - Historical (PRO)
      description: Historical apy and tvl data for a specific vault.
      parameters:
        - $ref: '#/components/parameters/NetworkPathParam'
        - $ref: '#/components/parameters/VaultAddressPathParam'
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/PerPageQueryParam'
        - $ref: '#/components/parameters/ApyIntervalQueryParam'
        - $ref: '#/components/parameters/FromTimestampQueryParam'
        - $ref: '#/components/parameters/ToTimestampQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: Historical tvl and apy data.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/HistoricalPointTime'
                      properties:
                        apy:
                          allOf:
                            - $ref: '#/components/schemas/ApyBreakdown'
                        tvl:
                          allOf:
                            - $ref: '#/components/schemas/AmountBreakdown'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/historical/{network}/{vaultAddress}/apy:
    post:
      tags:
      - Historical (PRO)
      description: Historical apy data for a specific vault.
      parameters:
        - $ref: '#/components/parameters/NetworkPathParam'
        - $ref: '#/components/parameters/VaultAddressPathParam'
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/PerPageQueryParam'
        - $ref: '#/components/parameters/ApyIntervalQueryParam'
        - $ref: '#/components/parameters/FromTimestampQueryParam'
        - $ref: '#/components/parameters/ToTimestampQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: Historical apy data.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/HistoricalPointTime'
                            - type: object
                              properties:
                                apy:
                                  allOf:
                                    - $ref: '#/components/schemas/ApyBreakdown'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/historical/{network}/{vaultAddress}/tvl:
    post:
      tags:
      - Historical (PRO)
      description: Historical tvl data for a specific vault.
      parameters:
        - $ref: '#/components/parameters/NetworkPathParam'
        - $ref: '#/components/parameters/VaultAddressPathParam'
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/PerPageQueryParam'
        - $ref: '#/components/parameters/ApyIntervalQueryParam'
        - $ref: '#/components/parameters/FromTimestampQueryParam'
        - $ref: '#/components/parameters/ToTimestampQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: Historical tvl data.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                properties:
                  nextPage:
                    allOf:
                      - $ref: '#/components/schemas/PageNumber'
                  data:
                    type: array
                    items:
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/HistoricalPointTime'
                      properties:
                        tvl:
                          allOf:
                            - $ref: '#/components/schemas/AmountBreakdown'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
          
  /v2/transactional/context/{network}/{vaultAddress}/{userAddress}:
    get:
      tags:
        - Transactional (PRO)
      description: Get transactional context for a specific vault and user.
      parameters:
        - $ref: '#/components/parameters/NetworkPathParam'
        - $ref: '#/components/parameters/VaultAddressPathParam'
        - $ref: '#/components/parameters/UserAddressPathParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: Transactional context.
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentDepositStep:
                    type: string
                  depositSteps:
                    type: array
                    items:
                      $ref: '#/components/schemas/Step'
                  currentRedeemStep:
                    type: string
                  redeemSteps:
                    type: array
                    items:
                      $ref: '#/components/schemas/Step'
                  lpTokenBalance:
                    type: string
                  idleAssets:
                    $ref: '#/components/schemas/AssetAmounts'
                  lockedValueInAssets:
                    $ref: '#/components/schemas/AssetAmounts'
                  unclaimedAssets:
                    $ref: '#/components/schemas/AssetAmounts'
                  vaultSpecificData:
                    type: object
                    additionalProperties: {}
                  rewards:
                    type: object
                    properties:
                      claimable:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnclaimedReward'
                      currentStep:
                        type: string
                      steps:
                        type: array
                        items:
                          $ref: '#/components/schemas/Step'
                    required:
                      - currentDepositStep
                      - depositSteps
                      - currentRedeemStep
                      - redeemSteps
                      - lpTokenBalance
                      - idleAssets
                      - lockedValueInAssets
                      - unclaimedAssets
                    additionalProperties: false
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/transactional/{action}/{network}/{vaultAddress}/{userAddress}:
    get:
      tags:
        - Transactional (PRO)
      description: Get actions for a specific vault and user (e.g., deposit, redeem, claim).
      parameters:
        - $ref: '#/components/parameters/ActionPathParam'
        - $ref: '#/components/parameters/NetworkPathParam'
        - $ref: '#/components/parameters/VaultAddressPathParam'
        - $ref: '#/components/parameters/UserAddressPathParam'
        - name: simulate
          in: query
          required: false
          schema:
            type: string
            enum:
              - 'true'
              - 'false'
            default: 'false'
        - name: assetAddress
          in: query
          required: true
          schema:
            allOf:
              - $ref: '#/components/schemas/Address'
        - name: amount
          in: query
          required: true
          schema:
            type: string
      security:
        - apiKey: []
      responses:
        '200':
          description: Actions for the specified operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentActionIndex:
                    type: number
                  actions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Action'
                required:
                  - currentActionIndex
                  - actions
                additionalProperties: false
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
                
  /v2/portfolio/wallet-balances/{userAddress}:
    post:
      tags:
        - Portfolio (PRO)
      description: Get asset balances for a user.
      parameters:
        - $ref: '#/components/parameters/UserAddressPathParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  allOf:
                    - $ref: '#/components/schemas/PageNumberFilter'
                perPage:
                  allOf:
                    - $ref: '#/components/schemas/PerPageFilter'
                allowedNetworks:
                  allOf:
                    - $ref: '#/components/schemas/AllowedNetworksFilter'
                disallowedNetworks:
                  allOf:
                    - $ref: '#/components/schemas/DisallowedNetworksFilter'
                allowedAssets:
                  allOf:
                    - $ref: '#/components/schemas/AllowedAssetsFilter'
                disallowedAssets:
                  allOf:
                    - $ref: '#/components/schemas/DisallowedAssetsFilter'
                minUsdValueThreshold:
                  allOf:
                    - $ref: '#/components/schemas/MinBalanceUsdThresholdFilter'
              additionalProperties: false
              required:
                - page
      security:
        - apiKey: []
      responses:
        '200':
          description: Array of assets with user's balances.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/AssetWithBalance'
                            - type: object
                              properties:
                                network:
                                  $ref: '#/components/schemas/Network'
                      errors:
                        allOf:
                          - $ref: '#/components/schemas/CustomErrorsNoProtocols'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/portfolio/positions/{userAddress}:
    post:
      tags:
        - Portfolio (PRO)
      description: Get user's positions.
      parameters:
        - $ref: '#/components/parameters/UserAddressPathParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  allOf:
                    - $ref: '#/components/schemas/PageNumberFilter'
                perPage:
                  allOf:
                    - $ref: '#/components/schemas/PerPageFilter'
                apyInterval:
                  allOf:
                    - $ref: '#/components/schemas/ApyIntervalFilter'
                allowedNetworks:
                  allOf:
                    - $ref: '#/components/schemas/AllowedNetworksFilter'
                disallowedNetworks:
                  allOf:
                    - $ref: '#/components/schemas/DisallowedNetworksFilter'
                allowedAssets:
                  allOf:
                    - $ref: '#/components/schemas/AllowedAssetsFilter'
                disallowedAssets:
                  allOf:
                    - $ref: '#/components/schemas/DisallowedAssetsFilter'
                allowedProtocols:
                  allOf:
                    - $ref: '#/components/schemas/AllowedProtocolsFilter'
                disallowedProtocols:
                  allOf:
                    - $ref: '#/components/schemas/DisallowedProtocolsFilter'
                minUsdValueThreshold:
                  allOf:
                    - $ref: '#/components/schemas/MinBalanceUsdThresholdFilter'
                
              additionalProperties: false
              required:
                - page
      security:
        - apiKey: []
      responses:
        '200':
          description: Array of user's positions.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/VaultPosition'
                      errors:
                        allOf:
                          - $ref: '#/components/schemas/CustomErrorsAll'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/portfolio/positions/{network}/{vaultAddress}/{userAddress}:
    post:
      tags:
        - Portfolio (PRO)
      description: Get user's position for a specific vault.
      parameters:
        - $ref: '#/components/parameters/NetworkPathParam'
        - $ref: '#/components/parameters/VaultAddressPathParam'
        - $ref: '#/components/parameters/UserAddressPathParam'
        - $ref: '#/components/parameters/ApyIntervalQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: User's position on a specific vault.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/VaultPosition'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/portfolio/events/{network}/{vaultAddress}/{userAddress}:
    post:
      tags:
      - Portfolio (PRO)
      description: Historical events performed by a user on a specific vault.
      parameters:
        - $ref: '#/components/parameters/NetworkPathParam'
        - $ref: '#/components/parameters/VaultAddressPathParam'
        - $ref: '#/components/parameters/UserAddressPathParam'
        - $ref: '#/components/parameters/PageQueryParam'
        - $ref: '#/components/parameters/PerPageQueryParam'
        - $ref: '#/components/parameters/FromTimestampQueryParam'
        - $ref: '#/components/parameters/ToTimestampQueryParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: User events.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/HistoricalPointTime'
                            - type: object
                              properties:
                                eventType:
                                  allOf:
                                    - $ref: '#/components/schemas/EventType'
                                eventAssetAmount:
                                  allOf:
                                    - $ref: '#/components/schemas/AmountBreakdown'
                                resultingPosition:
                                  allOf:
                                    - $ref: '#/components/schemas/AmountBreakdown'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/portfolio/returns/{network}/{vaultAddress}/{userAddress}:
    get:
      tags:
      - Portfolio (PRO)
      description: Total user returns on a specific vault.
      parameters:
        - $ref: '#/components/parameters/NetworkPathParam'
        - $ref: '#/components/parameters/VaultAddressPathParam'
        - $ref: '#/components/parameters/UserAddressPathParam'
      security:
        - apiKey: []
      responses:
        '200':
          description: User returns.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/AmountBreakdown'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/portfolio/best-deposit-options/{userAddress}:
    post:
      tags:
        - Portfolio (PRO)
      description: Get the best deposit options for a user.
      parameters:
        - $ref: '#/components/parameters/UserAddressPathParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                apyInterval:
                  allOf:
                    - $ref: '#/components/schemas/ApyIntervalFilter'
                allowedNetworks:
                  allOf:
                    - $ref: '#/components/schemas/AllowedNetworksFilter'
                disallowedNetworks:
                  allOf:
                    - $ref: '#/components/schemas/DisallowedNetworksFilter'
                allowedAssets:
                  allOf:
                    - $ref: '#/components/schemas/AllowedAssetsFilter'
                disallowedAssets:
                  allOf:
                    - $ref: '#/components/schemas/DisallowedAssetsFilter'
                allowedProtocols:
                  allOf:
                    - $ref: '#/components/schemas/AllowedProtocolsFilter'
                disallowedProtocols:
                  allOf:
                    - $ref: '#/components/schemas/DisallowedProtocolsFilter'
                minimumBalanceThreshold:
                  type: number
                  minimum: 0
                  default: 1
                  description: Minimum balance in USD of the assets to be included.
                minimumVaultTvl:
                  type: number
                  minimum: 0
                  default: 100000
                  description: Minimum TVL in USD of the vaults to be included.
                transactionalOnly:
                  type: boolean
                  description: Boolean indicating if only transactional vaults should be included.
                transactionalFeaturedOnly:
                  type: boolean
                  description: Boolean indicating if only transactional vaults featured in app.vaults.fyi should be included.
                maxVaultsPerAsset:
                  type: integer
                  minimum: 1
                  maximum: 5
                  default: 3
                  description: Maximum number of vaults per asset.
                minApy:
                  type: integer
                  minimum: 0
                  description: Minimum APY (in BPS) of the vaults to be included.
                alwaysReturnAssets:
                  type: array
                  items:
                    type: string
                    minLength: 1
                  default: []
                  description: Symbols/tickers of assets to always return, regardless of balance.
              additionalProperties: false
      security:
        - apiKey: []
      responses:
        '200':
          description: Best deposit options for the user.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BestDepositOptionsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /v2/portfolio/best-vault/{userAddress}:
    post:
      tags:
        - Portfolio (PRO)
      description: Get the best vault to deposit for a user.
      parameters:
        - $ref: '#/components/parameters/UserAddressPathParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                apyInterval:
                  allOf:
                    - $ref: '#/components/schemas/ApyIntervalFilter'
                allowedNetworks:
                  allOf:
                    - $ref: '#/components/schemas/AllowedNetworksFilter'
                disallowedNetworks:
                  allOf:
                    - $ref: '#/components/schemas/DisallowedNetworksFilter'
                allowedAssets:
                  allOf:
                    - $ref: '#/components/schemas/AllowedAssetsFilter'
                disallowedAssets:
                  allOf:
                    - $ref: '#/components/schemas/DisallowedAssetsFilter'
                allowedProtocols:
                  allOf:
                    - $ref: '#/components/schemas/AllowedProtocolsFilter'
                disallowedProtocols:
                  allOf:
                    - $ref: '#/components/schemas/DisallowedProtocolsFilter'
                minimumBalanceThreshold:
                  type: number
                  minimum: 0
                  default: 1
                  description: Minimum balance in USD of the assets to be included.
                minimumVaultTvl:
                  type: number
                  minimum: 0
                  default: 100000
                  description: Minimum TVL in USD of the vaults to be included.
                transactionalOnly:
                  type: boolean
                  description: Boolean indicating if only transactional vaults should be included.
                transactionalFeaturedOnly:
                  type: boolean
                  description: Boolean indicating if only transactional vaults featured in app.vaults.fyi should be included.
                maxVaultsPerAsset:
                  type: integer
                  minimum: 1
                  maximum: 5
                  default: 3
                  description: Maximum number of vaults per asset.
                minApy:
                  type: integer
                  minimum: 0
                  description: Minimum APY (in BPS) of the vaults to be included.
              additionalProperties: false
      security:
        - apiKey: []
      responses:
        '200':
          description: Best vault for the user.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/BestVaultResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    apiKey:
      type: apiKey
      name: x-api-key
      in: header

  schemas:
    NetworkCaip:
      type: string
      pattern: "^eip155:\\d+$"
      example: "eip155:1"
    Network:
      type: object
      properties:
        name:
          type: string
          example: "mainnet"
        chainId:
          type: number
          example: 1
        networkCaip:
          allOf:
            - $ref: '#/components/schemas/NetworkCaip'
    AssetCaip:
      type: string
      pattern: "^eip155:\\d+\\/(erc20:0x[0-9a-fA-F]{40}|slip44:\\d+)$"
      example: "erc20:0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
    Address:
      type: string
      pattern: "^0x[0-9a-fA-F]{40}$"
      example: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"
    Asset:
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/Address'
        assetCaip:
          allOf:
            - $ref: '#/components/schemas/AssetCaip'
        name:
          type: string
          example: "USD Coin"
        symbol:
          type: string
          example: "USDC"
        decimals:
          type: number
          example: 6
    AmountNative:
      type: string
      example: "123120000"
    AmountUsd:
      type: string
      example: "123.12"
    AssetWithBalance:
      allOf:
        - $ref: '#/components/schemas/Asset'
        - type: object
          properties:
            balanceNative:
              allOf:
                - $ref: '#/components/schemas/AmountNative'
            balanceUsd:
              allOf:
                - $ref: '#/components/schemas/AmountUsd'
    IsTransactional:
      type: boolean
      example: true
    IsAppFeatured:
      type: boolean
      example: true
    PageNumber:
      type: integer
      minimum: 0
      example: 1
    TotalItems:
      type: integer
      minimum: 0
      example: 127
    PagedResponse:
      type: object
      properties:
        totalItems:
          allOf:
            - $ref: '#/components/schemas/TotalItems'
        nextPage:
          allOf:
            - $ref: '#/components/schemas/PageNumber'
    Protocol:
      type: object
      properties:
        name:
          type: string
          example: "AAVE"
        version:
          type: string
          example: "v2"
    VaultBenchmarks:
      type: object
      properties:
        name:
          type: string
          example: "Aave v3 USDC"
        address:
          allOf:
            - $ref: '#/components/schemas/Address'
        network:
          allOf:
            - $ref: '#/components/schemas/Network'
    BenchmarkData:
      type: object
      properties:
        apy:
          allOf:
            - $ref: '#/components/schemas/ApyBreakdown'
        includedVaults:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/VaultBenchmarks'

    VaultBasicWithoutAsset:
      type: object
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/Address'
        network:
          allOf:
            - $ref: '#/components/schemas/Network'
        isTransactional:
          allOf:
            - $ref: '#/components/schemas/IsTransactional'
        isAppFeatured:
          allOf:
            - $ref: '#/components/schemas/IsAppFeatured'
    VaultBasic:
      allOf:
        - $ref: '#/components/schemas/VaultBasicWithoutAsset'
        - type: object
          properties:
            asset:
              allOf:
                - $ref: '#/components/schemas/Asset'
    Apy:
      type: number
      minimum: 0
      example: 0.12
    ApyForIntervals:
      type: object
      properties:
        1day:
          allOf:
            - $ref: '#/components/schemas/Apy'
        7day:
          allOf:
            - $ref: '#/components/schemas/Apy'
        30day:
          allOf:
            - $ref: '#/components/schemas/Apy'
    ApyBreakdown:
      type: object
      properties:
        base:
          allOf:
            - $ref: '#/components/schemas/Apy'
        rewards:
          allOf:
            - $ref: '#/components/schemas/Apy'
        total:
          allOf:
            - $ref: '#/components/schemas/Apy'
      required:
        - base
        - total
    ApyBreakdownForIntervals:
      type: object
      properties:
        base:
          allOf:
            - $ref: '#/components/schemas/ApyForIntervals'
        rewards:
          allOf:
            - $ref: '#/components/schemas/ApyForIntervals'
        total:
          allOf:
            - $ref: '#/components/schemas/ApyForIntervals'
      required:
        - base
        - total
    AmountBreakdown:
      type: object
      properties:
        native:
          type: string
          example: '100000000000000000000000'
        usd:
          type: string
          example: '100000'
    RewardsDetails:
      type: array
      items:
        type: object
        properties:
          apy:
            allOf:
              - $ref: '#/components/schemas/ApyForIntervals'
          asset:
            allOf:
              - $ref: '#/components/schemas/Asset'
    Score:
      type: number
      minimum: 0
      maximum: 100
      example: 55
    ScoreDetails:
      type: object
      properties:
        vaultScore:
          allOf:
            - $ref: '#/components/schemas/Score'
        vaultTvlScore:
          allOf:
            - $ref: '#/components/schemas/Score'
        protocolTvlScore:
          allOf:
            - $ref: '#/components/schemas/Score'
        holderScore:
          allOf:
            - $ref: '#/components/schemas/Score'
        networkScore:
          allOf:
            - $ref: '#/components/schemas/Score'
        assetScore:
          allOf:
            - $ref: '#/components/schemas/Score'
    Tags:
      type: array
      items:
        type: string
      example:
        - "Lending"
        - "RWA"
    VaultDetails:
      type: object
      allOf:
        - $ref: '#/components/schemas/VaultBasic'
      properties:
        name:
          type: string
          example: "Aave v3 USDC"
        protocol:
          allOf:
            - $ref: '#/components/schemas/Protocol'
        lendUrl:
          type: string
          example: "https://app.vaults.fyi/opportunity/mainnet/0x98C23E9d8f34FEFb1B7BD6a91B7FF122F4e16F5c"
        protocolVaultUrl:
          type: string
          example: "https://app.aave.com/reserve-overview/?underlyingAsset=0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48&marketName=proto_mainnet_v3"
        tags:
          allOf:
            - $ref: '#/components/schemas/Tags'
        holders:
          type: number
          example: 123
        apy:
          allOf:
            - $ref: '#/components/schemas/ApyBreakdownForIntervals'
        tvl:
          allOf:
            - $ref: '#/components/schemas/AmountBreakdown'
        rewards:
          allOf:
            - $ref: '#/components/schemas/RewardsDetails'
        score:
          allOf:
            - $ref: '#/components/schemas/ScoreDetails'
    VaultPosition:
      allOf:
        - $ref: '#/components/schemas/VaultBasic'
        - type: object
          properties:
            name:
              type: string
              example: "Aave v3 USDC"
            protocol:
              allOf:
                - $ref: '#/components/schemas/Protocol'
            apy:
              allOf:
                - $ref: '#/components/schemas/ApyBreakdown'
            balanceNative:
              allOf:
                - $ref: '#/components/schemas/AmountNative'
            balanceUsd:
              allOf:
                - $ref: '#/components/schemas/AmountUsd'
            balanceLp:
              allOf:
                - $ref: '#/components/schemas/AmountNative'
            unclaimedNative:
              allOf:
                - $ref: '#/components/schemas/AmountNative'
            unclaimedUsd:
              allOf:
                - $ref: '#/components/schemas/AmountUsd'
    HistoricalPointTime:
      type: object
      properties:
        timestamp:
          type: integer
          minimum: 0
          example: 1741181887
          description: Epoch timestamp in seconds
        blockNumber:
          type: integer
          minimum: 0
          example: 21980991
          description: Block number
    
    Tx:
      type: object
      properties:
        to:
          type: string
          pattern: "^0x[a-fA-F0-9]{40}$"
        chainId:
          type: number
          example: 1
        data:
          type: string
          pattern: "^0x[a-fA-F0-9]$"
        value:
          type: string
          pattern: "^0x[a-fA-F0-9]$"
      required:
        - to
        - chainId
      additionalProperties: false
    AssetAmounts:
      type: object
      additionalProperties:
        type: string
      example:
        "0xAbC1234567890deF4567890abC1234567890dEf": "10500000"
        "0xDeF1234567890aBc1234567890deF4567890AbC": "3200000000000000000"
    Simulation:
      type: object
      properties:
        url:
          type: string
        status:
          type: string
          enum:
            - success
            - failure
            - internal server error
        tokensReceived:
          allOf:
            - $ref: '#/components/schemas/AssetAmounts'
        tokensSpent:
          allOf:
            - $ref: '#/components/schemas/AssetAmounts'
      required:
        - url
        - status
      additionalProperties: false
    Action:
      type: object
      properties:
        name:
          type: string
        tx:
          $ref: '#/components/schemas/Tx'
        simulation:
          $ref: '#/components/schemas/Simulation'
      required:
        - name
        - tx
      additionalProperties: false
    Step:
      type: object
      properties:
        actions:
          type: array
          items:
            type: string
        actionsUrl:
          type: string
        name:
          type: string
          enum:
            - deposit
            - redeem
            - requestRedeem
            - claimRedeem
            - claim
          example: "step"
    UnclaimedReward:
      type: object
      properties:
        amount:
          type: string
        asset:
          $ref: '#/components/schemas/Asset'
      required:
        - amount
        - asset
    
    BestDepositOptionsResponse:
      type: object
      properties:
        requestedAddress:
          allOf:
            - $ref: '#/components/schemas/Address'
        userBalances:
          type: array
          items:
            type: object
            properties:
              asset:
                allOf:
                  -  $ref: '#/components/schemas/AssetWithBalance'
              depositOptions:
                type: array
                items:
                  allOf:
                    -  $ref: '#/components/schemas/DepositOption'
        errors:
          allOf:
            - $ref: '#/components/schemas/CustomErrorsAll'
      required:
        - requestedAddress
        - userBalances
      additionalProperties: false
      
    BestVaultResponse:
      type: object
      properties:
        requestedAddress:
          allOf:
            - $ref: '#/components/schemas/Address'
        asset:
          allOf:
            -  $ref: '#/components/schemas/AssetWithBalance'
        vault:
          allOf:
            -  $ref: '#/components/schemas/DepositOption'
        errors:
          allOf:
            - $ref: '#/components/schemas/CustomErrorsAll'
      required:
        - requestedAddress
        - asset
        - vault
      additionalProperties: false
      
    DepositOption:
      allOf:
        - $ref: '#/components/schemas/VaultBasicWithoutAsset'
        - type: object
          properties:
            name:
              type: string
              example: "Aave v3 USDC"
            protocol:
              allOf:
                - $ref: '#/components/schemas/Protocol'
            apy:
              allOf:
                - $ref: '#/components/schemas/ApyBreakdown'
            tvl:
              allOf:
                - $ref: '#/components/schemas/AmountBreakdown'
            tags:
              allOf:
                - $ref: '#/components/schemas/Tags'
            projectedUsdAnnualEarnings:
              type: string
              example: "112.23"
            lendUrl:
              type: string
              example: "https://app.vaults.fyi/opportunity/mainnet/0x98C23E9d8f34FEFb1B7BD6a91B7FF122F4e16F5c"
            protocolVaultUrl:
              type: string
              example: "https://app.aave.com/reserve-overview/?underlyingAsset=0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48&marketName=proto_mainnet_v3"

    EventType:
      type: string
      enum:
        - TransferIn
        - TransferOut
        - Deposit
        - Withdrawal
      example: "Deposit"

    CustomErrors:
      type: array
      items:
        type: string
    CustomErrorsAll:
      type: object
      properties:
        unsupportedNetworks:
          allOf:
            - $ref: '#/components/schemas/CustomErrors'
        unsupportedAssets:
          allOf:
            - $ref: '#/components/schemas/CustomErrors'
        unsupportedProtocols:
          allOf:
            - $ref: '#/components/schemas/CustomErrors'
    CustomErrorsNoProtocols:
      type: object
      properties:
        unsupportedNetworks:
          allOf:
            - $ref: '#/components/schemas/CustomErrors'
        unsupportedAssets:
          allOf:
            - $ref: '#/components/schemas/CustomErrors'

    NetworkEnumFilter:
      type: string
      enum:
        - mainnet
        - arbitrum
        - optimism
        - polygon
        - base
        - gnosis
        - unichain
        - eip155:1
        - eip155:42161
        - eip155:10
        - eip155:137
        - eip155:8453
        - eip155:100
        - eip155:130
    AssetSymbolFilter:
      type: string
      example: "USDC"
    OnlyTransactionalFilter:
      type: boolean
      default: false
      description: Include only vaults that are supported in the transactional interface.
    OnlyAppFeaturedFilter:
      type: boolean
      default: false
      description: Include only vaults that are featured in app.vaults.fyi
    ApyIntervalFilter:
      enum:
        - "1day"
        - "7day"
        - "30day"
      default: "7day"
      description: Resolution of the APY data.
    NetworksFilter:
      type: array
      items:
        type: string
        allOf:
          - $ref: '#/components/schemas/NetworkEnumFilter'
    AllowedNetworksFilter:
      allOf:
        - $ref: '#/components/schemas/NetworksFilter'
      default:
        - base
        - mainnet
        - arbitrum
        - optimism
      description: Networks to be included (name or CAIP).
    DisallowedNetworksFilter:
      allOf:
        - $ref: '#/components/schemas/NetworksFilter'
      example:
        - "polygon"
      description: Networks to be excluded (name or CAIP). The parameter is ignored if "allowedNetworks" is specified.
    AllowedAssetsFilter:
      type: array
      items:
        type: string
        minLength: 1
      description: Assets to be included by symbol(ticker)
      example:
        - "USDC"
        - "USDT"
    DisallowedAssetsFilter:
      type: array
      items:
        type: string
        minLength: 1
      description: Assets to be excluded by symbol(ticker)
      example:
        - "DAI"
    AllowedProtocolsFilter:
      type: array
      items:
        type: string
        minLength: 1
      description: Protocols to be included by name
      example:
        - "AAVE"
        - "Compound"
    DisallowedProtocolsFilter:
      type: array
      items:
        type: string
        minLength: 1
      description: Protocols to be excluded by name
      example:
        - "Ethena"
    MinTvlFilter:
      type: number
      minimum: 0
      default: 100000
      description: Minimum TVL in USD of the vaults to be included
    MaxTvlFilter:
      type: number
      minimum: 0
      description: Maximum TVL in USD of the vaults to be included
    PerPageFilter:
      type: integer
      exclusiveMinimum: true
      minimum: 0
      maximum: 250
      default: 10
      description: Items to include on a single page
    PageNumberFilter:
      type: integer
      minimum: 0
      default: 0
    TagsFilter:
      type: array
      items:
        type: string
        minLength: 1
      description: Tags to be included
      example:
        - "Lending"
        - "RWA"
    FromTimestampFilter:
      type: integer
      minimum: 0
      default: 0
      description: Epoch timestamp in seconds
    ToTimestampFilter:
      type: integer
      minimum: 0
      example: 1741181887
      description: Epoch timestamp in seconds
    MinBalanceUsdThresholdFilter:
      type: number
      minimum: 0
      default: 0
      example: 0.5
      
  parameters:
    NetworkPathParam:
      name: network
      in: path
      required: true
      schema:
        allOf:
          - $ref: '#/components/schemas/NetworkEnumFilter'
    VaultAddressPathParam:
      name: vaultAddress
      in: path
      required: true
      schema:
        allOf:
          - $ref: '#/components/schemas/Address'
    UserAddressPathParam:
      name: userAddress
      in: path
      required: true
      schema:
        allOf:
          - $ref: '#/components/schemas/Address'
    ActionPathParam:
      name: action
      in: path
      required: true
      schema:
        enum:
          - deposit
          - redeem
          - request-redeem
          - claim-redeem
          - claim-rewards
    PageQueryParam:
      name: page
      in: query
      required: true
      schema:
        allOf:
          - $ref: '#/components/schemas/PageNumberFilter'
    PerPageQueryParam:
      name: perPage
      in: query
      required: false
      schema:
        allOf:
          - $ref: '#/components/schemas/PerPageFilter'
    ApyIntervalQueryParam:
      name: apyInterval
      in: query
      required: true
      schema:
        allOf:
          - $ref: '#/components/schemas/ApyIntervalFilter'
    FromTimestampQueryParam:
      name: fromTimestamp
      in: query
      required: false
      schema:
        allOf:
          - $ref: '#/components/schemas/FromTimestampFilter'
    ToTimestampQueryParam:
      name: toTimestamp
      in: query
      required: false
      schema:
        allOf:
          - $ref: '#/components/schemas/ToTimestampFilter'
  
  responses:
    BadRequest:
      description: "Bad Request - Invalid request parameters"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              error:
                type: string
              message:
                type: string
                description: "A JSON array as a string representing detailed validation errors."
    Unauthorized:
      description: "Unauthorized - Missing or wrong API key"
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string
    InternalServerError:
      description: "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request. This could be due to an unhandled exception, misconfiguration, or temporary server issue."
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string
